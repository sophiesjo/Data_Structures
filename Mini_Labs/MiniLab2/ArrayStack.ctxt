#BlueJ class context
comment0.target=ArrayStack
comment0.text=\n\ \ @author\ Lewis\ and\ Chase\n\n\ \ Represents\ an\ array\ implementation\ of\ a\ stack.\n
comment1.params=
comment1.target=ArrayStack()
comment1.text=\n\ Creates\ an\ empty\ stack\ using\ the\ default\ capacity.\n
comment2.params=initialCapacity
comment2.target=ArrayStack(int)
comment2.text=\n\ Creates\ an\ empty\ stack\ using\ the\ specified\ capacity.\n\ @param\ initialCapacity\ represents\ the\ specified\ capacity\ \n
comment3.params=element
comment3.target=void\ push(java.lang.Object)
comment3.text=\n\ Adds\ the\ specified\ element\ to\ the\ top\ of\ this\ stack,\ expanding\n\ the\ capacity\ of\ the\ stack\ array\ if\ necessary.\n\ @param\ element\ generic\ element\ to\ be\ pushed\ onto\ stack\n
comment4.params=
comment4.target=java.lang.Object\ pop()
comment4.text=\n\ Removes\ the\ element\ at\ the\ top\ of\ this\ stack\ and\ returns\ a\n\ reference\ to\ it.\ Throws\ an\ EmptyCollectionException\ if\ the\ stack\n\ is\ empty.\n\ @return\ T\ element\ removed\ from\ top\ of\ stack\n\ @throws\ EmptyCollectionException\ if\ a\ pop\ is\ attempted\ on\ empty\ stack\n
comment5.params=
comment5.target=java.lang.Object\ peek()
comment5.text=\n\ Returns\ a\ reference\ to\ the\ element\ at\ the\ top\ of\ this\ stack.\n\ The\ element\ is\ not\ removed\ from\ the\ stack.\ \ Throws\ an\n\ EmptyCollectionException\ if\ the\ stack\ is\ empty.\ \ \n\ @return\ T\ element\ on\ top\ of\ stack\n\ @throws\ EmptyCollectionException\ if\ a\ peek\ is\ attempted\ on\ empty\ stack\n
comment6.params=
comment6.target=boolean\ isEmpty()
comment6.text=\n\ Returns\ true\ if\ this\ stack\ is\ empty\ and\ false\ otherwise.\ \n\ @return\ boolean\ true\ if\ this\ stack\ is\ empty,\ false\ otherwise\n
comment7.params=
comment7.target=int\ size()
comment7.text=\n\ Returns\ the\ number\ of\ elements\ in\ this\ stack.\n\ @return\ int\ the\ number\ of\ elements\ in\ this\ stack\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ Returns\ a\ string\ representation\ of\ this\ stack.\ \n\ @return\ String\ representation\ of\ this\ stack\n
comment9.params=
comment9.target=void\ expandCapacity()
comment9.text=\n\ Creates\ a\ new\ array\ to\ store\ the\ contents\ of\ this\ stack\ with\n\ twice\ the\ capacity\ of\ the\ old\ one.\n
numComments=10
